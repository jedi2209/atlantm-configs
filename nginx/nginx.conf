user					nginx;
worker_processes		auto;
worker_rlimit_nofile	30000;

error_log				/var/log/nginx/error-main.log;
pid						/var/run/nginx.pid;

include					/usr/share/nginx/modules/*.conf;

events {
	worker_connections	2048;

	multi_accept		on;
	use epoll;
}

http {

	log_format  main	'$remote_addr - $remote_user [$time_local] "$request"'
						' $status $body_bytes_sent "$http_referer"'
						' "$http_user_agent" $request_time $upstream_cache_status'
						' [$upstream_response_time] "$http_x_forwarded_for"';

	log_format scripts	'$remote_addr "$request_time" "$upstream_response_time" "$upstream_cache_status" $status "$time_local" $document_root$fastcgi_script_name > $request';

	access_log			off;
	error_log			/var/log/nginx/error.log;

	map $http_x_forwarded_for $allowed {
		default deny;
		~\s*123.456.789.012$    allow;
		~\s*234.567.890.123$     allow;
	}

	upstream api {
		server api.xxx.com;
	}
	upstream api-backend {
		server api-backend.xxx.com;
	}

	fastcgi_cache_path /tmp/nginx/ levels=1:2 keys_zone=wholepage:50m max_size=256m inactive=1d;

	sendfile            on;
	tcp_nopush          on;
	tcp_nodelay         off;

	# Timeout for keep-alive connections. Server will close connections after this time.
	keepalive_timeout 30;

	# Number of requests a client can make over the keep-alive connection.
	keepalive_requests 100;

	# Allow the server to close the connection after a client stops responding. 
	reset_timedout_connection on;

	# Send the client a "request timed out" if the body is not loaded by this time.
	client_body_timeout 10;

	# If the client stops reading data, free up the stale client connection after this much time.
	send_timeout 10;

	# Compression.
#        gzip on;
#        gzip_vary on;
#        gzip_min_length 10240;
#        gzip_comp_level 3;
#        gzip_proxied expired no-cache no-store private auth;
#        gzip_types text/plain application/xml text/xml text/css application/x-javascript text/javascript application/javascript image/svg+xml;
#        gzip_disable "msie6";


	types_hash_max_size 2048;
	client_max_body_size 300m;
	large_client_header_buffers 16 1m;

	# increase buffer and timeouts
	fastcgi_connect_timeout 120;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 128k;
	fastcgi_buffers 4 256k;
	fastcgi_busy_buffers_size 256k;
	fastcgi_temp_file_write_size 256k;
	fastcgi_intercept_errors on;

	proxy_buffer_size 4k;
	proxy_buffers 4 32k;
	proxy_busy_buffers_size 64k;
	proxy_http_version 1.1;

	include             /etc/nginx/mime.types;
	default_type        application/octet-stream;


	include conf.d/*.conf;

	index   index.html index.htm index.php;

	server {
		listen       80 default_server;
		server_name  localhost;
		root         /srv/www/default/public_html/;

		access_log off;
		error_log    /var/log/nginx/default_error.log crit;

		deny all;

		include default.d/*.conf;

	    location / {}
	}

	server {
		listen       443;
		server_name  localhost;
		root         /srv/www/default/public_html/;

		access_log off;
		error_log    /var/log/nginx/default_error.ssl.log crit;

		deny all;

		include default.d/*.conf;

		location / {}
    }

	include "vhost/*.conf";
}
